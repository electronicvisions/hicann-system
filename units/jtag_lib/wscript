#!/usr/bin/env python
import platform, os, sys


def depends(ctx):
    ctx('sctrltp', branch='master')

def options(ctx):
    ctx.load('compiler_cxx')

def configure(ctx):
    ctx.load('compiler_cxx')
    ctx.check_cxx(lib='dl', uselib_store='jtag_lib_dl')
    ctx.check_boost(lib='system thread chrono',
            uselib_store='BOOST4JTAGLIB')

def build(ctx):
    SOURCES = '''
        jtag_cmdbase.cpp jtag_access.cpp jtag_cse.cpp jtag_digilent.cpp jtag_eth_socket.cpp jtag_ethernet.cpp \
        jtag_if.cpp jtag_lib.cpp jtag_logger.cpp jtag_state.cpp jtag_targets.cpp
    '''.split()

    ctx(
        target          = 'jtag_lib_inc',
        export_includes = 'source',
        use             = ['sctrl_inc'],
    )

    ctx.objects(
        target    = 'jtag_lib_obj',
        source    = [ctx.path.find_resource('source/%s' % x) for x in SOURCES],
        use       = ['jtag_lib_inc', 'jtag_lib_dl', 'BOOST4JTAGLIB', 's2hal_inc', 'sctrl_inc', 'arqstream_obj', 'systemc_config', 'logger_obj'],
        # communication_inc already included in arqstream_obj
        cxxflags  = ['-fPIC', '-DNO_SYSTEMC_LIB']
    )
